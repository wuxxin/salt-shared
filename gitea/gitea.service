[Unit]
Description=Gitea ({{ entry.name }}) {{ entry.global.app_name }}
After=syslog.target
After=network.target
{%- if entry.database.db_type == 'mysql' %}
Requires=mariadb.service
{%- elif entry.database.db_type == 'postgres' %}
Requires=postgresql.service
{%- endif %}

###
# If using socket activation for main http/s
#After=gitea.main.socket
#Requires=gitea.main.socket
###
# (You can also provide gitea an http fallback and/or ssh socket too)
# An example of /etc/systemd/system/gitea.main.socket
## [Unit]
## Description=Gitea Web Socket
## PartOf=gitea.service
## [Socket]
## Service=gitea.service
## ListenStream=<some_port>
## NoDelay=true
## [Install]
## WantedBy=sockets.target

[Service]
RestartSec=2s
Type=simple
User={{ entry.global.run_user }}
Group={{ entry.global.run_user }}
WorkingDirectory={{ entry.salt.work_dir }}
ExecStart=/usr/local/bin/gitea web --config /etc/gitea_{{ entry.name }}_app.ini
Restart=always
Environment=USER={{ entry.global.run_user }}
Environment=HOME={{ entry.salt.home_dir }}
Environment=GITEA_WORK_DIR={{ entry.salt.work_dir}}
Environment=GITEA_CUSTOM={{ entry.salt.custom_dir}}

# repos with lots of files and get an HTTP error 500 because of that
#LimitMEMLOCK=infinity
#LimitNOFILE=65535
# If using Unix socket: tells systemd to create the /run/gitea folder, which will contain the gitea.sock file
#RuntimeDirectory=gitea_{{ entry.name }}
# If you want to bind Gitea to a port below 1024, uncomment the two values below,
# or use socket activation to pass Gitea its ports as above
#CapabilityBoundingSet=CAP_NET_BIND_SERVICE
#AmbientCapabilities=CAP_NET_BIND_SERVICE

[Install]
WantedBy=multi-user.target
