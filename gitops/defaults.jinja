
{% load_yaml as defaults %}

user: {{ salt['cmd.run_stdout']('getent passwd 1000 | cut -d: -f1', python_shell=True)|d('gitops') }}

timer:
  enabled: false
  oncalendar: '*-*-* 06:30:00'

webhook:
  enabled: false
  ip: 127.0.0.1
  port: 5555
  default_command: /usr/local/bin/webhook-gitops-update.sh
  hooks: []

git:
  source: ssh://git@git.domain.top:22/user/project.git
  branch: master
  ssh_id:
  ssh_id_pub:
  ssh_known_hosts:
  gpg_id:

automatic_reboot: true
maintenance_template: /var/lib/gitops/maintenance.template
maintenance_target: /var/lib/gitops/maintenance/503.html

pre_update_command: /usr/bin/true
update_command: /usr/local/sbin/execute-saltstack.sh . state.highstate
post_update_command: /usr/bin/true
finish_update_command: /usr/bin/true

{#
+ pre_update: is executed before update but only if update would run
+ update: is executed if pre_update was sucessful and update would run
+ post_update is executed after update did run sucessful
+ finish_update is executed after post_update was sucessful and machine does not need a reboot
example:
```
pre_update_command: /usr/bin/systemctl stop xyz
post_update_command: /usr/bin/bash -c '. /usr/local/lib/gitops-library.sh;
    simple_metric test_update_run counter "timestamp of update run" "$(date +%s)000"'
finish_update_command: /usr/bin/systemctl start --no-block xyz
```
#}

env_file: /etc/gitops.env
var_dir: /var/lib/gitops
src_dir: {{ grains['project_basepath'] }}

{% endload %}

{% set settings=salt['grains.filter_by']({'default': defaults},
  grain='default', default= 'default', merge= salt['pillar.get']('gitops', {})) %}

{% if settings.git.branch is not defined %}
  {% do settings.git.update({ 'branch': 'master' }) %}
{% endif %}

{% if settings.home_dir is not defined %}
  {% do settings.update(
    { 'home_dir': salt['cmd.run']('getent passwd '+
      settings.user+ ' | cut -d: -f6', python_shell=True) } ) %}
{% endif %}
