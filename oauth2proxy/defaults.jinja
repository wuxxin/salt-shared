{% load_yaml as defaults %}

username: oauth2proxy
home_dir: /var/lib/oauth2proxy

profile: []

container:
  name: oauth2proxy
  requires: keycloak.service
  image: quay.io/oauth2-proxy/oauth2-proxy
  tag: latest
  ports:
    - 127.0.0.1:8081
  environment: {}

external:
  oauth2_proxy_tar_gz:
    version: 6.1.1
    latest: curl -L -s -o /dev/null -w "%{url_effective}" "https://github.com/oauth2-proxy/oauth2-proxy/releases/latest" | sed -r "s/.*\/v([^\/]+)$/\1/"
    download: "https://github.com/oauth2-proxy/oauth2-proxy/releases/download/v##version##/oauth2-proxy-v##version##.linux-amd64.tar.gz"
    target: /usr/local/lib/oauth2-proxy.tar.gz
    hash: a661d59c55cfcc2b46ae1f0b24a3e8a2ced5413f931b8b05f7bf4e867c70d912

{% endload %}

{% load_yaml as profile_defaults %}
name: "default"
enabled: true
config:
  client_id: "oauth2-proxy"
  client_secret: ""
  {# cookie_secret: the seed string for secure cookies; should be 16, 24, or 32 bytes #}
  cookie_secret: ""
  cookie_secure: "true"
  {# the following values are calculated per profile if empty:
  cookie_name: "_oauth2_proxy"
  http_address: unix:///run/oauth2proxy/oauth2proxy.sock
  #}
  reverse_proxy: "true"

  provider: oidc
  {# provider_display_name="Keycloak" #}
  oidc_issuer_url: "https://keycloak.localhost/auth/realms/yourrealm"
  login_url: "https://keycloak.localhost/realms/yourrealm/protocol/openid-connect/auth"
  redeem_url: "https://keycloak.localhost/realms/yourrealm/protocol/openid-connect/token"
  validate_url: "https://keycloak.localhost/realms/yourrealm/protocol/openid-connect/userinfo"
  {# keycloak groups are trees, so prepend "/" to it #}
  {# keycloak_group: /all #}
  {# email_domains: '["example.com"]' #}

{% endload %}


{% set settings=salt['grains.filter_by']({'none': defaults},
  grain='none', default= 'none', merge= salt['pillar.get']('oauth2proxy', {})) %}

{# expand ##version## in field external.*.download #}
{% for n,v in settings.external.items() %}
  {% set dummy=settings.external[n].__setitem__('download',
        v['download']|regex_replace('##version##', v.version)) %}
{% endfor %}

{# expand profile entries #}
{% set pns= namespace(plist=[]) %}
{% for raw_entry in settings.profile %}
  {% set entry=salt['grains.filter_by']({'default': profile_defaults},
    grain='default', default= 'default', merge= raw_entry) %}
  {% if entry.config.http_address is not defined %}
    {% do entry.config.update({ 'http_address': 'unix:///run/oauth2proxy_' ~ entry.name ~ '/oauth2proxy.sock' }) %}
  {% endif %}
  {% if entry.config.cookie_name is not defined %}
    {% do entry.config.update({ 'cookie_name': '_oauth2_proxy_' ~ entry.name }) %}
  {% endif %}
  {% do pns.plist.append(entry) %}
{% endfor %}

{% set settings.update({"profile": pns.plist}) %}
