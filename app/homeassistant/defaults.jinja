{% import_yaml "app/homeassistant/zigbee2mqtt.yml" as zigbee2mqtt %}
{% import_yaml "app/homeassistant/homeassistant.yml" as hass %}
{% import_yaml "app/homeassistant/appdaemon.yml" as appdaemon %}
{% import_yaml "app/homeassistant/rhasspy-profile.yml" as rhasspy %}

{% load_yaml as defaults %}
config:
  mosquitto:
    configuration: |
      # mosquitto config
      persistence true
      persistence_location /mosquitto/data
      log_dest stdout
      per_listener_settings true
      # pod internal listener
      listener 1883
      allow_anonymous true
    listener: []

  zigbee2mqtt:
    configuration: {{ zigbee2mqtt }}
    devices: {}
    groups: {}

  hass:
    configuration: {{ hass }}
    customize: {}
    customize_domain: {}
    customize_glob: {}
    packages:
      {# to disable entry, set homeassistant:config:hass:packages:zigbee2mqtt: false #}
      zigbee2mqtt: salt://app/homeassistant/packages/zigbee2mqtt.yaml
    plural_names:
      {# these sections filenames will have additional "s" and be included in the main directory #}
      {# XXX must be in sync with docker-compose.yml hass:volumes entries #}
      - scene
      - automation
      - sensor
    default_enabled:
      {# default sections enabled, to disable an already listed entry, set entry to false #}
      automation: true
      # cloud: true
      counter: true
      # dhcp: true
      energy: true
      frontend: true
      history: true
      input_boolean: true
      input_datetime: true
      input_number: true
      input_select: true
      input_text: true
      logbook: true
      map: true
      media_source: true
      mobile_app: true
      my: true
      network: true
      person: true
      scene: true
      script: true
      ssdp: true
      sun: true
      system_health: true
      tag: true
      timer: true
      # usb: true
      updater: true
      webhook: true
      zeroconf: true
      zone: true
      # Enables configuration UI
      config: true

  appdaemon: {{ appdaemon }}
  rhasspy: {{ rhasspy}}

compose:
  name: homeassistant
  source: salt://app/homeassistant/docker-compose.yml
  refresh: true
  ephemeral: true
  systemd:
    wants: postgresql.service
    restart: on-success
  files: {}
  environment:
    # RHASSPY_PROFILE: en
    # ZB_ADAPTER: /dev/ttyUSB0
    ZB_RUNAS: "1001"
    HASS_RUNAS: "1001"

{% endload %}

{% set settings = salt['grains.filter_by']({'default': defaults},
  grain='default', default= 'default', merge= salt['pillar.get']('homeassistant', {})) %}

{% load_yaml as files %}
'mosquitto/mosquitto.conf':
  user: 1883
  group: 1883
  contents: |
{{ settings.config.mosquitto.configuration|indent(4,True) }}
  {%- for listener in settings.config.mosquitto.listener %}
    listener {{ listener.listener }}
{{ listener.config|indent(4,True) }}
  {%- endfor %}

'zigbee2mqtt/configuration.yaml':
  user: {{ settings.compose.environment.ZB_RUNAS }}
  group: {{ settings.compose.environment.ZB_RUNAS }}
  contents: |
{{ settings.config.zigbee2mqtt.configuration|yaml(False)|indent(4,True) }}

'zigbee2mqtt/devices.yaml':
  user: {{ settings.compose.environment.ZB_RUNAS }}
  group: {{ settings.compose.environment.ZB_RUNAS }}
  contents: |
{{ settings.config.zigbee2mqtt.devices|yaml(False)|indent(4,True) }}

'zigbee2mqtt/groups.yaml':
  user: {{ settings.compose.environment.ZB_RUNAS }}
  group: {{ settings.compose.environment.ZB_RUNAS }}
  contents: |
{{ settings.config.zigbee2mqtt.groups|yaml(False)|indent(4,True) }}

'hass/configuration.yaml':
  source: salt://app/homeassistant/homeassistant-template.yml
  template: jinja
  user: {{ settings.compose.environment.HASS_RUNAS }}
  group: {{ settings.compose.environment.HASS_RUNAS }}
  context:
    hass:
{{ settings.config.hass|yaml(False)|indent(6,True) }}

'hass/run':
  source: salt://app/homeassistant/homeassistant_run
  user: {{ settings.compose.environment.HASS_RUNAS }}
  group: {{ settings.compose.environment.HASS_RUNAS }}
  mode: "755"

{# write customizations #}
  {%- for k in ['customize', 'customize_domain', 'customize_glob'] %}
'hass/include/{{ k }}.yaml':
  user: {{ settings.compose.environment.HASS_RUNAS }}
  group: {{ settings.compose.environment.HASS_RUNAS }}
  contents: |
{{ settings.config.hass[k]|yaml(False)|indent(4,True) }}
  {%- endfor %}

{# write all defined hass.configuration keys except homeassistant as included files #}
  {%- for k in settings.config.hass.configuration.keys() %}
    {%- if k not in ['homeassistant'] %}
      {%- set l = 'include/' ~ k if k not in settings.config.hass.plural_names else k ~ 's' %}
'hass/{{ l }}.yaml':
  user: {{ settings.compose.environment.HASS_RUNAS }}
  group: {{ settings.compose.environment.HASS_RUNAS }}
  contents: |
{{ settings.config.hass.configuration[k]|yaml(False)|indent(4,True) }}
    {%- endif %}
  {%- endfor %}

{# also write all default_enabled keys that are not defined in hass.configuration #}
  {%- for k,v in settings.config.hass.default_enabled.items() %}
    {%- if k not in settings.config.hass.configuration.keys() and v == true %}
      {%- set l = 'include/' ~ k if k not in settings.config.hass.plural_names else k ~ 's' %}
'hass/{{ l }}.yaml':
  user: {{ settings.compose.environment.HASS_RUNAS }}
  group: {{ settings.compose.environment.HASS_RUNAS }}
  contents: ""
    {%- endif %}
  {%- endfor %}

{# write listed packages #}
  {%- for k,v in settings.config.hass.packages.items() %}
    {%- if v %}
'hass/packages/{{ k }}.yaml':
  user: {{ settings.compose.environment.HASS_RUNAS }}
  group: {{ settings.compose.environment.HASS_RUNAS }}
  source: {{ v }}
    {%- endif %}
  {%- endfor %}
'hass/packages/_keepdir':
  user: {{ settings.compose.environment.HASS_RUNAS }}
  group: {{ settings.compose.environment.HASS_RUNAS }}
  contents: ""

{% endload %}

{% for key, value in files.items() %}
{% do settings.compose.files.update( {key: value} ) %}
{% endfor %}
