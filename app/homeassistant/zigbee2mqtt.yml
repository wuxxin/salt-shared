# Optional: Home Assistant integration (MQTT discovery) (default: false)
homeassistant: true

# Optional: allow new devices to join.
# WARNING: Disable this after all devices have been paired! (default: false)
permit_join: false

# specify devices and groups in a separate file
devices: devices.yaml
groups: groups.yaml

frontend:
  # Optional, default 8080
  port: 8080
  # Optional, default 0.0.0.0
  host: 0.0.0.0
  # Optional, enables authentication, disabled by default
  # auth_token: your-secret-token

# Required: MQTT settings
mqtt:
  # Required: MQTT base topic for Zigbee2MQTT MQTT messages
  base_topic: zigbee2mqtt
  # Required: MQTT server URL (use mqtts:// for SSL/TLS connection)
  server: 'mqtt://mosquitto:1883'
  # Optional: absolute path to SSL/TLS certificate of CA used to sign server and client certificates (default: nothing)
  # ca: '/etc/ssl/mqtt-ca.crt'
  # Optional: absolute paths to SSL/TLS key and certificate for client-authentication (default: nothing)
  # key: '/etc/ssl/mqtt-client.key'
  # cert: '/etc/ssl/mqtt-client.crt'
  # Optional: MQTT server authentication user (default: nothing)
  # user: my_user
  # Optional: MQTT server authentication password (default: nothing)
  # password: my_password
  # Optional: MQTT client ID (default: nothing)
  # client_id: 'MY_CLIENT_ID'
  # Optional: disable self-signed SSL certificates (default: true)
  # reject_unauthorized: false
  # Optional: Include device information to mqtt messages (default: false)
  # include_device_information: true
  # Optional: MQTT keepalive in seconds (default: 60)
  # keepalive: 60
  # Optional: MQTT protocol version (default: 4), set this to 5 if you
  # use the 'retention' device specific configuration
  # version: 4
  # Optional: Disable retain for all send messages. ONLY enable if you MQTT broker doesn't
  # support retained message (e.g. AWS IoT core, Azure IoT Hub, Google Cloud IoT core, IBM Watson IoT Platform).
  # Enabling will break the Home Assistant integration. (default: false)
  # force_disable_retain: false

# Required: serial settings
serial:
  # Required: location of the adapter (e.g. CC2531).
  # To autodetect the port, set 'port: null'.
  port: /dev/ttyACM0
  # Optional: disable LED of the adapter if supported (default: false)
  # disable_led: false
  # Optional: adapter type, not needed unless you are experiencing problems (default: shown below, options: zstack, deconz)
  # adapter: null # deconz for Conbee II OR "zigate" for the ZiGate USB-TTL
  # adapter: deconz

# Optional: Block devices from the network (by ieeeAddr) (default: empty)
# Previously called `ban` (which is deprecated)
# blocklist:
#  - '0x000b57fffec6a5b2'

# Optional: Allow only certain devices to join the network (by ieeeAddr)
# Note that all devices not on the passlist will be removed from the network!
# (default: empty)
# Previously called `whitelist` (which is deprecated)
# passlist:
#  - '0x000b57fffec6a5b3'

# Optional: advanced settings
advanced:
  # Optional: ZigBee pan ID (default: shown below)
  # Setting pan_id: GENERATE will make Zigbee2MQTT generate a new panID on next startup
  # 16 bit pan_id: printf "0x%s" "$(openssl rand -hex 2)"
  pan_id: 0x1a62
  # Optional: Zigbee extended pan ID (default: shown below)
  # 64 bit pan_id: printf "[%s]" "$(openssl rand -hex 8 | sed -r "s/(..)/0x\1, /g")"
  ext_pan_id: [0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD]
  # Optional: ZigBee channel, changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)
  # (default: 11)
  # channel: 11
  # Optional: state caching, MQTT message payload will contain all attributes, not only changed ones.
  # Has to be true when integrating via Home Assistant (default: true)
  # cache_state: true
  # Optional: persist cached state, only used when cache_state: true (default: true)
  # cache_state_persistent: true
  # Optional: send cached state on startup, only used when cache_state_persistent: true (default: true)
  # cache_state_send_on_startup: true
  # Optional: Logging level, options: debug, info, warn, error (default: info)
  # log_level: info
  # Optional: Location of log directory (default: shown below)
  # log_directory: data/log/%TIMESTAMP%
  # Optional: Log file name, can also contain timestamp, e.g.: zigbee2mqtt_%TIMESTAMP%.log (default: shown below)
  # log_file: log.txt
  # Optional: Rotate log every 10MB around 3 files (default: true)
  # log_rotation: true
  # Optional: Output location of the log (default: shown below), leave empty to supress logging (log_output: [])
  # possible options: 'console', 'file', 'syslog'
  log_output:
    - console
  # - file
  # Create a symlink called "current" in the log directory which points to the latests log directory. (default: false)
  # log_symlink_current: false
  # Optional: syslog configuration, skip values or entirely to use defaults. Only use when 'syslog' in 'log_output' (see above)
  log_syslog: {}
    # host: localhost # The host running syslogd, defaults to localhost.
    # port: 123 # The port on the host that syslog is running on, defaults to syslogd's default port.
    # protocol: tcp4 # The network protocol to log over (e.g. tcp4, udp4, tls4, unix, unix-connect, etc).
    # path:  /dev/log # The path to the syslog dgram socket (i.e. /dev/log or /var/run/syslog for OS X).
    # pid: process.pid # PID of the process that log messages are coming from (Default process.pid).
    # facility: local0 # Syslog facility to use (Default: local0).
    # localhost: localhost # Host to indicate that log messages are coming from (Default: localhost).
    # type: 5424 # The type of the syslog protocol to use (Default: BSD, also valid: 5424).
    # app_name: Zigbee2MQTT # The name of the application (Default: Zigbee2MQTT).
    # eol: '\n' # The end of line character to be added to the end of the message (Default: Message without modifications).

  # Optional: Baud rate speed for serial port, this can be anything firmware support but default is 115200 for Z-Stack and EZSP, 38400 for Deconz, however note that some EZSP firmware need 57600.
  # baudrate: 115200
  # Optional: RTS / CTS Hardware Flow Control for serial port (default: false)
  # rtscts: false
  # Optional: soft reset ZNP after timeout (in seconds); 0 is disabled (default: 0)
  # soft_reset_timeout: 0
  # Optional: network encryption key, will improve security (Note: changing requires repairing of all devices) (default: shown below)
  # Setting network_key: GENERATE will make Zigbee2MQTT generate a new network key on next startup
  # The network encryption key size is 128-bit which is essentially 16 decimal values between 0 and 255 or 16 hexadecimal values between 0x00and 0xFF.
  # printf "[%s]" "$(openssl rand -hex 16 | sed -r "s/(..)/0x\1, /g")"
  network_key: [1, 3, 5, 7, 9, 11, 13, 15, 0, 2, 4, 6, 8, 10, 12, 13]
  # Optional: Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message
  # possible values are: disable (default), ISO_8601, ISO_8601_local, epoch (default: disable)
  # last_seen: 'disable'
  # Optional: Add an elapsed attribute to MQTT messages, contains milliseconds since the previous msg (default: false)
  # elapsed: false
  # Optional: Availability timeout in seconds, disabled by default (0).
  # When enabled, devices will be checked if they are still online.
  # Only AC powered routers are checked for availability. (default: 0)
  # availability_timeout: 0
  # Optional: Prevent devices from being checked for availability (default: empty)
  # Previously called `availability_blacklist` (which is deprecated)
  # availability_blocklist: []
  # - DEVICE_FRIENDLY_NAME or DEVICE_IEEE_ADDRESS
  # Optional: Only enable availability check for certain devices (default: empty)
  # Previously called `availability_whitelist` (which is deprecated)
  # availability_passlist: []
  # - DEVICE_FRIENDLY_NAME or DEVICE_IEEE_ADDRESS
  # Optional: Enables report feature, this feature is DEPRECATED since reporting is now setup by default
  # when binding devices. Docs can still be found here: https://github.com/Koenkk/zigbee2mqtt.io/blob/master/docs/information/report.md
  # report: true
  # Optional: Home Assistant discovery topic (default: shown below)
  # homeassistant_discovery_topic: 'homeassistant'
  # Optional: Home Assistant status topic (default: shown below)
  # homeassistant_status_topic: 'homeassistant/status'
  # Optional: Home Assistant legacy entity attributes, (default: shown below), when enabled:
  # Zigbee2MQTT will send additional states as attributes with each entity. For example,
  # A temperature & humidity sensor will have 2 entities for the temperature and
  # humidity, with this setting enabled both entities will also have
  # an temperature and humidity attribute.
  # Note: Disabling this option, requires a Home Assistant restart
  # homeassistant_legacy_entity_attributes: true
  homeassistant_legacy_entity_attributes: false
  # Optional: Home Assistant legacy triggers (default: shown below), when enabled:
  # - Zigbee2mqt will send an empty 'action' or 'click' after one has been send
  # - A 'sensor_action' and 'sensor_click' will be discoverd
  # homeassistant_legacy_triggers: true
  homeassistant_legacy_triggers: false
  # Optional: log timestamp format (default: shown below)
  # timestamp_format: 'YYYY-MM-DD HH:mm:ss'
  # Optional: configure adapter concurrency (e.g. 2 for CC2531 or 16 for CC26X2R1) (default: null, uses recommended value)
  # adapter_concurrent: null
  # Optional: disables the legacy api (default: shown below)
  # legacy_api: true
  legacy_api: false
  # Optional: use IKEA TRADFRI OTA test server, see OTA updates documentation (default: false)
  # ikea_ota_use_test_url: false

# Optional: experimental options
experimental: {}
  # Optional: MQTT output type: json, attribute or attribute_and_json (default: shown below)
  # Examples when 'state' of a device is published
  # json: topic: 'zigbee2mqtt/my_bulb' payload '{"state": "ON"}'
  # attribute: topic 'zigbee2mqtt/my_bulb/state' payload 'ON"
  # attribute_and_json: both json and attribute (see above)
  # output: 'json'
  # Optional: Transmit power setting in dBm (default: 5).
  # This will set the transmit power for devices that bring an inbuilt amplifier.
  # It can't go over the maximum of the respective hardware and might be limited
  # by firmware (for example to migrate heat, or by using an unsupported firmware).
  # For the CC2652R(B) this is 5 dBm, CC2652P/CC1352P-2 20 dBm.
  # transmit_power: 5

# Optional: networkmap options
# map_options:
#   graphviz:
#     # Optional: Colors to be used in the graphviz network map (default: shown below)
#     colors:
#       fill:
#         enddevice: '#fff8ce'
#         coordinator: '#e04e5d'
#         router: '#4ea3e0'
#       font:
#         coordinator: '#ffffff'
#         router: '#ffffff'
#         enddevice: '#000000'
#       line:
#         active: '#009900'
#         inactive: '#994444'

# # Optional: OTA update settings
ota:
  update_check_interval: 10080
  # 10080 = 7 days in minutes
  # # Minimum time between OTA update checks, see https://www.zigbee2mqtt.io/information/ota_updates.html for more info
  # update_check_interval: 1440
  # # Disable automatic update checks, see https://www.zigbee2mqtt.io/information/ota_updates.html for more info
  # disable_automatic_update_check: false

# Optional: see 'Device specific configuration' below
device_options: {}
# Optional, see 'External converters configuration' below
external_converters: []
