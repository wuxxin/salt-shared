[Unit]
Description=Systemd service for podman container {{ pod.name }}
After=network-online.target {{ pod.after }}
{% if pod.wants %}Wants={{ pod.wants }}{% endif %}
{% if pod.requires %}Requires={{ pod.requires }}{% endif %}
StartLimitBurst=5
StartLimitIntervalSec=100

[Service]
Type={{ pod.type }}
{%- if not pod.restart %}
  {%- if pod.type == 'oneshot' %}
Restart="no"
  {%- else %}
Restart=on-failure
  {%- endif %}
{%- else %}
Restart={{ pod.restart }}
{%- endif %}
{%- if pod.update %}
  {%- if pod.build %}
ExecStartPre=podman build {{ pod.build }} {{ "--tag="+ pod.tag if pod.tag }}
  {%- else %}
ExecStartPre=podman pull {{ pod.image }}{{ ":"+ pod.tag if pod.tag }}
  {%- endif %}
{%- endif %}
{%- if pod.ephemeral %}
ExecStartPre=-podman rm -f {{ pod.name }}
{%- endif %}
# RuntimeDirectory will create /run/{{ pod.name }} for pid, socket files
RuntimeDirectory={{ pod.name }}
# contents of Environmentfile will be passed to container using --env-host
EnvironmentFile=/etc/{{ pod.name }}.env

{%- if pod.enabled %}
ExecStart=podman run \
  {%- if pod.ephemeral %}
  --rm \
  {%- endif %}
  --name={{ pod.name }} \
  --env-host \
  {%- for key,value in pod.options.items() %}
  --{{ key }}={{ value }} \
  {%- endfor %}
  {%- for key,value in pod.labels.items() %}
  --label={{ key }}={{ value }} \
  {%- endfor %}
  {%- for vol in pod.volumes %}
  --volume={{ vol }} \
  {%- endfor %}
  {%- for publish in pod.ports %}
  --publish={{ publish }} \
  {%- endfor %}
  {{ pod.image }}{{ ":"+ pod.tag if pod.tag }} {% if pod.command %} \
  {{ pod.command }} {{ pod.args }}
  {% endif %}
{%- else %}
ExecStart=/usr/bin/false
{%- endif %}

ExecStop=podman stop {{ pod.name }}

[Install]
WantedBy=multi-user.target
