[Unit]
Description={{ 'user' if user = '' }} systemd service for podman container {{ entry.name }}
{%- if user = '' %}
After=network-online.target {{ entry.systemd.after }}
{%- else %}
{% if entry.systemd.after|length %}After={{ entry.systemd.after }}{% endif %}
{%- endif %}
{% if entry.systemd.wants|length %}Wants={{ entry.systemd.wants }}{% endif %}
{% if entry.systemd.requires|length %}Requires={{ entry.systemd.requires }}{% endif %}

{%- for k,v in entry.systemd.unit.items() %}
{{ k }}={{ v }}
{%- endfor %}

[Service]
Type={{ entry.type }}
{%- if not entry.systemd.restart|length %}
  {%- if entry.type == 'oneshot' %}
Restart=no
  {%- else %}
Restart=on-failure
  {%- endif %}
{%- else %}
Restart={{ entry.systemd.restart }}
{%- endif %}

# RuntimeDirectory will create /run/{{ entry.name }} for pid, socket files
RuntimeDirectory={{ entry.name }}
WorkingDirectory={{ entry.workdir }}

{%- if entry.update %}
  {%- if entry.build.source != '' %}
# build on start
ExecStartPre=/usr/bin/bash 'cd {{ entry.builddir }} && \
    podman build {{ '--tag='+ entry.tag if entry.tag }} \
    {%- for key,value in entry.build.args.items() %}
    {{ '--build-arg=' ~ key ~ '=' ~ value }} \
    {%- endfor %}
    {{ entry.build.source }}'
  {%- else %}

# pull on start
ExecStartPre=/usr/bin/bash 'registry="{{ entry.image }}"; \
    if test "${registry%*/}" != "localhost"; then \
      podman pull {{ entry.image }}{{ ":"+ entry.tag if entry.tag }}; \
    fi'
  {%- endif %}
{%- endif %}

{%- if entry.ephemeral %}
# remove existing container before start
ExecStartPre=-podman rm -f {{ entry.name }}
{%- endif %}

# start container
ExecStart=podman run \
  --name={{ entry.name }} \
  --cgroups=split \
  --env-file {{ entry.configdir }}/.env \
  --env-host \
{%- if entry.userns == 'pick' %}
  --uidmap=0:{{ entry.USERNS_ID }}:65536 \
  --gidmap=0:{{ entry.USERNS_ID }}:65536 \
{%- else %}
  --userns={{ entry.userns }} \
{%- endif %}
{%- for key,value in entry.labels.items() %}
  --label={{ key }}={{ value }} \
{%- endfor %}
{%- for vol in entry.volumes %}
  --volume={{ vol }} \
{%- endfor %}
{%- for publish in entry.ports %}
  --publish={{ publish }} \
{%- endfor %}
{%- for opt in entry.options %}
  {{ opt }} \
{%- endfor %}
  {{ entry.image }}{{ ":"~ entry.tag if entry.tag }} {% if entry.command %} \
  {{ entry.command }} {{ entry.args }}
{% endif %}

{%- if entry.type = 'service' %}
# stop container
ExecStop=podman stop {{ entry.name }}
{%- endif %}

{%- for k,v in entry.systemd.service.items() %}
{{ k }}={{ v }}
{%- endfor %}

{%- if entry.type = 'service' %}
[Install]
  {%- if user = '' %}
WantedBy=multi-user.target
  {%- else %}
WantedBy=default.target
  {%- endif %}
{%- endif %}
