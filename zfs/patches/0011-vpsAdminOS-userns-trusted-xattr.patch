From 44b79c72a5dfe37cfb23f2578edeea45a5499318 Mon Sep 17 00:00:00 2001
From: Pavel Snajdr <snajpa@snajpa.net>
Date: Tue, 1 Oct 2019 17:00:42 +0200
Subject: [PATCH 11/13] [vpsAdminOS] userns trusted xattr

---
 include/os/linux/kernel/linux/xattr_compat.h |  1 +
 module/os/linux/zfs/zpl_xattr.c              | 18 +++++++++++++++---
 2 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/include/os/linux/kernel/linux/xattr_compat.h b/include/os/linux/kernel/linux/xattr_compat.h
index 8348e9919..e5174c2db 100644
--- a/include/os/linux/kernel/linux/xattr_compat.h
+++ b/include/os/linux/kernel/linux/xattr_compat.h
@@ -27,6 +27,7 @@
 #define	_ZFS_XATTR_H
 
 #include <linux/posix_acl_xattr.h>
+#include <linux/user_namespace.h>
 
 /*
  * 2.6.35 API change,
diff --git a/module/os/linux/zfs/zpl_xattr.c b/module/os/linux/zfs/zpl_xattr.c
index 956aed528..33ef1890b 100644
--- a/module/os/linux/zfs/zpl_xattr.c
+++ b/module/os/linux/zfs/zpl_xattr.c
@@ -757,11 +757,23 @@ xattr_handler_t zpl_xattr_user_handler =
  * the kernel) which keep information in extended attributes to which
  * ordinary processes should not have access." - xattr(7)
  */
+bool __xattr_trusted(void)
+{
+	struct user_namespace *ns = current_user_ns();
+	if (((ns == &init_user_ns) || (ns->parent == &init_user_ns)) &&
+	    ns_capable(ns, CAP_SYS_ADMIN))
+		return true;
+	printk(KERN_INFO "ZFS: __xattr_trusted() failed for pid %d\n",
+			current->pid);
+	return false;
+}
+
+
 static int
 __zpl_xattr_trusted_list(struct inode *ip, char *list, size_t list_size,
     const char *name, size_t name_len)
 {
-	return (capable(CAP_SYS_ADMIN));
+	return __xattr_trusted();
 }
 ZPL_XATTR_LIST_WRAPPER(zpl_xattr_trusted_list);
 
@@ -772,7 +784,7 @@ __zpl_xattr_trusted_get(struct inode *ip, const char *name,
 	char *xattr_name;
 	int error;
 
-	if (!capable(CAP_SYS_ADMIN))
+	if (!__xattr_trusted())
 		return (-EACCES);
 	/* xattr_resolve_name will do this for us if this is defined */
 #ifndef HAVE_XATTR_HANDLER_NAME
@@ -794,7 +806,7 @@ __zpl_xattr_trusted_set(struct inode *ip, const char *name,
 	char *xattr_name;
 	int error;
 
-	if (!capable(CAP_SYS_ADMIN))
+	if (!__xattr_trusted())
 		return (-EACCES);
 	/* xattr_resolve_name will do this for us if this is defined */
 #ifndef HAVE_XATTR_HANDLER_NAME
-- 
2.20.1

