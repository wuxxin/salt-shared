#!/bin/bash

# This is a postsetconf script for zentyal
msub() {
  python -c "import sys, re; sys.stdout.write(re.sub(r'$1', r'$2', sys.stdin.read(), flags=re.MULTILINE + re.DOTALL))"
}

ssub() {
  python -c "import sys, re; sys.stdout.write(re.sub(r'$1', r'$2', sys.stdin.read()))"
}

# postfix main.cf modifications
cat /etc/postfix/main.cf | \
{%- if salt['pillar.get']('letsencrypt:enabled', false) %}
{% set domain = salt['pillar.get']('letsencrypt:domains', ['domain.not.set'])[0].split(' ')[0] %}
  ssub '.*smtpd_tls_key_file[\t ]*=.*' 'smtpd_tls_key_file = /usr/local/etc/dehydrated/certs/{{ domain }}/privkey.pem' |
  ssub '.*smtpd_tls_cert_file[\t ]*=.*' 'smtpd_tls_cert_file = /usr/local/etc/dehydrated/certs/{{ domain }}/fullchain.pem' |
{%- else %}
{%- set domain = pillar.appliance.zentyal.domain %}
{%- endif %}
  ssub '^myhostname.*' '/myhostname = {{ domain }}' |
  ssub '^mydomain.*' '/mydomain = {{ domain }}' |
  ssub '.*smtp_tls_security_level.*' 'smtp_tls_security_level = may' > /etc/postfix/main.cf.new

# postfix main.cf additions
cat >> /etc/postfix/main.cf.new << EOF
delay_warning_time = 2h
smtp_tls_mandatory_ciphers = high
smtp_tls_policy_maps = hash:/etc/postfix/tls_policy_map
transport_maps = hash:/etc/postfix/transport_map
dovedrop_destination_recipient_limit = 1
EOF
rm /etc/postfix/main.cf; mv /etc/postfix/main.cf.new /etc/postfix/main.cf

# connect postfix with opendkim milter
! append milters to main.conf
milter_default_action = accept
milter_protocol   = 6
smtpd_milters     = inet:localhost:12345
non_smtpd_milters = inet:localhost:12345

# postfix master.cf additions
cat >> /etc/postfix/master.cf.new << EOF
dovedrop        unix    -       n       n       -       -       pipe
  flags=DRhu user=ebox:ebox argv=/usr/lib/dovecot-lda  -f \${sender} -d \${user}@\${nexthop} -o lda_mailbox_autocreate=yes -m
# -m \${extension}

EOF
rm /etc/postfix/master.cf; mv /etc/postfix/master.cf.new /etc/postfix/master.cf

# opendkim modifications
local restart_opendkim=false
sed -i.bak  "s/^Domain.*/Domain                 {{ domain }}/" /etc/opendkim.conf
if ! diff -q /etc/opendkim.conf.bak /etc/opendkim.conf; then
    echo "opendkim.conf changed"
    diff -u /etc/opendkim.conf.bak /etc/opendkim.conf
    restart_opendkim=true
fi
if test ! -d /etc/dkimkeys; then mkdir /etc/dkimkeys; fi
echo "$APPLIANCE_DKIM_KEY" > /etc/dkimkeys/dkim.key.new
chown opendkim /etc/dkimkeys/dkim.key.new
chmod "0600" /etc/dkimkeys/dkim.key.new
if ! diff -q /etc/dkimkeys/dkim.key /etc/dkimkeys/dkim.key.new; then
    echo "/etc/dkimkeys/dkim.key changed"
    mv /etc/dkimkeys/dkim.key.new /etc/dkimkeys/dkim.key
    restart_opendkim=true
fi
if $restart_opendkim; then
    systemctl restart opendkim
fi
    

# dovecot modifications (look at extra.conf for additions)
cat /etc/dovecot/dovecot.conf |
{%- if salt['pillar.get']("letsencrypt:enabled", false) %}
{% set domain = salt['pillar.get']('letsencrypt:domains', ['domain.not.set'])[0].split(' ')[0] %}
  ssub '.*ssl_cert[\t ]*=.*' 'ssl_cert =< /usr/local/etc/dehydrated/certs/{{ domain }}/fullchain.pem' |
  ssub '.*ssl_key[\t ]*=.*' 'ssl_key =< /usr/local/etc/dehydrated/certs/{{ domain }}/privkey.pem' |
{%- endif %}
  msub '^(protocol imap {)([^}]+)}$' '\1\n  mail_plugins = acl imap_acl quota imap_quota autocreate\n}\n' |
  msub '^(protocol pop3 {)([^}]+)}$' '\1\n  mail_plugins = acl quota\n}\n' |
  msub '^(protocol lda {)([^}]+)mail_plugins = ([^}]+)}$' '\1\n\2mail_plugins = acl \3\n}\n' |
  msub '^(plugin {)([^}]+)}$' '\1\n  acl = vfile\n \2}\n' > /etc/dovecot/dovecot.conf.new

rm /etc/dovecot/dovecot.conf; mv /etc/dovecot/dovecot.conf.new /etc/dovecot/dovecot.conf

#  msub '^(plugin {)([^}]+)}$' '\1\n  acl = vfile:/etc/dovecot/acl\n \2}\n'

exit 0
