#!/bin/bash
# This is a postsetconf script for zentyal

msub() {
  python -c "import sys, re; sys.stdout.write(re.sub(r'$1', r'$2', sys.stdin.read(), flags=re.MULTILINE + re.DOTALL))"
}

ssub() {
  python -c "import sys, re; sys.stdout.write(re.sub(r'$1', r'$2', sys.stdin.read()))"
}

# postfix domain, cert, key, dhparam
configfile=/etc/postfix/main.cf
if test -f "$configfile"; then
    cat $configfile | 
{%- if settings.letsencrypt %}
      ssub '.*smtpd_tls_cert_file[\t ]*=.*' 'smtpd_tls_cert_file = /app/etc/server.cert.pem' |
      ssub '.*smtpd_tls_key_file[\t ]*=.*' 'smtpd_tls_key_file = /app/etc/server.key.pem' |
      ssub '.*smtpd_tls_dh1024_param_file[\t ]*=.*' 'smtpd_tls_dh1024_param_file= /app/etc/dhparam.pem' |
{%- endif %}
      ssub '^myhostname.*' 'myhostname = {{ settings.domain }}' |
      cat > $configfile.new
    mv $configfile.new $configfile
fi

# postfix convert /var/mail/*mbox to *maildir
basedir=/var/mail
if ! find $basedir/ -maxdepth 1 -type f -exec false {} +; then
    for i in $(find $basedir/ -maxdepth 1 -type f); do
        original=$(basename $i)
        if test "$original" = "${original%.renamed}"; then
            mv $basedir/$original $basedir/${original}.renamed
        else
            original="${original%.renamed}"
        fi
        renamed="${original}.renamed"
        echo "Converting mbox $original"
        gosu $(stat -c "%U" $basedir/$renamed) /usr/local/bin/mb2md.pl -s $basedir/$renamed -d $basedir/$original
        if test -f $basedir/$renamed; then rm $basedir/$renamed; fi
    done
fi

# dovecot domain, cert, key and dhparam
configfile=/etc/dovecot/dovecot.conf
{%- if settings.letsencrypt %}
if test -f "$configfile"; then
    cat $configfile |
      ssub '.*ssl_cert[\t ]*=.*' 'ssl_cert =< /app/etc/server.cert.pem' |
      ssub '.*ssl_key[\t ]*=.*' 'ssl_key =< /app/etc/server.key.pem' |
      ssub '.*ssl_dh[\t ]*=.*' '# ssl_dh = </app/etc/dhparam.pem' |
      cat > $configfile.new
    mv $configfile.new $configfile
fi
{%- endif %}

# openkdim domain, dkim key
restart_opendkim=false
# opendkim domain
configfile=/etc/opendkim.conf
sed -i.bak  "s/^Domain.*/Domain                 {{ settings.domain }}/" $configfile
if ! diff -q $configfile.bak $configfile; then
    echo "opendkim.conf changed"
    diff -u $configfile.bak $configfile
    restart_opendkim=true
fi
# opendkim dkim key
if test ! -d /etc/dkimkeys; then mkdir /etc/dkimkeys; fi
configfile=/etc/dkimkeys/dkim.key
echo -e "{{ settings.dkim.key }}" > $configfile.new
chown opendkim $configfile.new
chmod "0600" $configfile.new
if ! diff -q $configfile $configfile.new; then
    echo "$configfile changed"
    mv $configfile.new $configfile
    restart_opendkim=true
fi
if $restart_opendkim; then
    systemctl restart opendkim
fi
    
exit 0
