{% import_yaml "containerd/external.yml" as containerd_external %}

{% load_yaml as defaults %}
config: {}

nerdctl: {}

crictl:
  runtime-endpoint: unix:///run/containerd/containerd.sock

cni:
  "10-containerd-net":
    cniVersion: 0.4.0
    name: containerd-net
    plugins:
    - bridge: cni0
      ipMasq: true
      ipam:
        ranges:
        - - subnet: 10.88.0.0/16
        - - subnet: 2001:4860:4860::/64
        routes:
        - dst: 0.0.0.0/0
        - dst: ::/0
        type: host-local
      isGateway: true
      promiscMode: true
      type: bridge
    - capabilities:
        portMappings: true
      type: portmap
  "10-flannel":
    cniVersion: 0.4.0
    name: cbr0
    plugins:
    - delegate:
        forceAddress: true
        hairpinMode: true
        isDefaultGateway: true
      type: flannel
    - capabilities:
        portMappings: true
      type: portmap

{# external software #}
external: {{ containerd_external.objects }}

{% endload %}


{%- set settings = salt['grains.filter_by']({'default': defaults},
  grain='default', default= 'default', merge= salt['pillar.get']('containerd', {})) %}

{# expand ##version## in field external.*.download #}
{% for n,v in settings.external.items() %}
  {% set download=settings.external[n]['download']|regex_replace('##version##', v.version) %}
  {% do settings.external[n].update( {'download': download} ) %}
  {% if settings.external[n]['hash_url'] %}
    {% set hash_url=settings.external[n]['hash_url']|regex_replace('##version##', v.version) %}
    {% do settings.external[n].update( {'hash_url': hash_url} ) %}
  {% endif %}
{% endfor %}
