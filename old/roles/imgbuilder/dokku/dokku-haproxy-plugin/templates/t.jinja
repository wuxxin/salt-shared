
# import_yaml "./defaults.yaml" as defaults 
# import_yaml "./other.yaml" as other
# set haproxy= defaults.haproxy|merge(other.haproxy)
# import_json "./test.json" as json_libvirt
# import_xml "./libvirt.xml" as xml_libvirt
{{ xml_libvirt|yaml(False) }}
{{ json_libvirt|yaml(False) }}

  bind {{ haproxy.serve }}:80
  bind {{ haproxy.serve }}:443

  redirect to https if hostname in list
# for name in haproxy.redirect_to_http_ssl
  redirect scheme https if { hdr(host) -i {{ name }} }
# endfor


 connect to backend server if in list
# for name, entry in haproxy.http_to_http.iteritems()
  use-server {{ name }}_{{ entry.port }} if { hdr(host) -i {{ name }} }
  server     {{ name }}_{{ entry.port }} {{ entry.ip }}:{{ entry.port }} check weight 0
# endfor


 iterate over the list of https backend servers and connect to them
# for name, entry in haproxy.http_ssl_to_http_ssl.iteritems()
  use-server {{ name }}_{{ entry.port }} if { req_ssl_sni -i {{ name }} }
  server     {{ name }}_{{ entry.port }} {{ entry.ip }}:{{ entry.port }} check weight 0
# endfor


 iterate over http_ssl_to_http
# for name, entry_list in haproxy.http_ssl_to_http.iteritems()
  # for entry in entry_list
    # if entry['path_beg'] is defined
        IS Defined
    # endif
  use-server {{ name }}_{{ entry.port }} if { hdr(host) -i {{ name }} }
  server     {{ name }}_{{ entry.port }} {{ entry.ip }}:{{ entry.port }} check weight 0
  # endfor
# endfor

